// --------------------------------------------------------------------------------------------------------
// magical borders
:root {
  --x: 0;
  --y: 0;
}

$bg: #0a0118;
$card-bg: #0a0118;
$border-size: -3px;
$border-radius: 20px;
$outer-border-radius: 22px;
$spotlight-size: 150;
$active: 1;
$hue-val: 0;
$hue-sat: 25;
$hue-lum: 50;
$relative: relative;
$absolute: absolute;

.magical-borders-container {

  > * {
    background: linear-gradient(180deg, #a9a3c233, #a9a3c20c);
    border-radius: 16px;
    position: $relative;
  }

}

.magical-borders-container-2 {
  > * {
    background: #a9a3c233;
    border-radius: 16px;
    position: $relative;
  }
}

.magical-borders-inner {
  background-color: $bg;
  border-radius: 16px;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  // forces browser to use 1px at min (chrome would not show magical border on one side when set to 1px zzz
  $var: 1.0000000000px;
  top: $var;
  right: $var;
  bottom: $var;
  left: $var;
  z-index: 2;
  position: $absolute;
}

.mouse-dot {
  position: $absolute;
  box-shadow: 0 0 100px 100px rgb(0, 255, 255, 0.075);
  border-radius: 100%;
  pointer-events: none;
  transform: translate(-50%, -50%);
  z-index: 2;
}

@layer magical-borders {

  .magical-borders {
    $alpha: calc(var($active, 0) * 0.15);
    $radial-bg: radial-gradient(circle at calc(--x * 1px) calc(--y * 1px), hsl(var($hue-val, 240) calc(var($hue-sat, 0) * 1%) calc(var($hue-lum, 100) * 1%) / $alpha), transparent calc($spotlight-size * 1px));
    aspect-ratio: 4 / 5;
    background: fixed $radial-bg, $card-bg;
    position: $relative;
    flex-direction: column;
    justify-content: space-evenly;
    border-radius: $border-radius;
    overflow: hidden;

    &:before {
      content: "";
      inset: $border-size;
      position: $absolute;
      z-index: -1;
      border-radius: $outer-border-radius;
      background: fixed radial-gradient(circle at calc(--x * 1px) calc(--y * 1px), hsl(var(--hue-val, 240) calc(var($hue-sat, 0) * 1.5%) calc(var($hue-lum, 100) * 1.5%) / 0.5), transparent calc($spotlight-size * 1px));
    }

    &:after {
      display: none;
      $alpha: 0.5;
      content: "";
      inset: 0;
      position: $absolute;
      z-index: -1;
      border-radius: $outer-border-radius;
      background: fixed radial-gradient(circle at calc(--x * 1px) calc(--y * 1px), hsl(var($hue-val, 240) calc(var($hue-sat, 0) * 1.5%) calc(var($hue-lum, 100) * 1%) / 0.5), transparent calc($spotlight-size * 1px));
      filter: blur(1.5rem);
    }
  }
}



:root {
  --bg: #0a0118;
  --card-bg: #0a0118;
  --color: hsl(240 18% 80%);

  --x: 0;
  --y: 0;

  --border-size: -3px;
  --border-radius: 20px;
  --outer-border-radius: 22px;
  --spotlight-size: 150;

  --active: 1;

  --hue-val: 0;
  --hue-sat: 25;
  --hue-lum: 50;
}


.magical-borders-inner {
  background-color: #0a0118;
  border-radius: 16px;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  /* forces browser to use 1px at min (chrome would not show magical border on one side when set to 1px zzz */
  --val: 1.000000000000000000000000000000px;
  top: var(--val);
  right: var(--val);
  bottom: var(--val);
  left: var(--val);
  z-index: 2;
  position: absolute;
}
.magical-borders-container>* {
  background: linear-gradient(180deg, #a9a3c233, #a9a3c20c);
  border-radius: 16px;
  position: relative;
}

.mouse-dot {
  position: absolute;
  box-shadow: 0 0 150px 150px rgb(0, 255, 255, 0.075);
  border-radius: 100%;
  pointer-events: none;
  transform: translate(-50%, -50%);
  z-index: 2;
}

@layer magical-borders {

  .magical-borders {
    --alpha: calc(var(--active, 0) * 0.15);
    --radial-bg: radial-gradient(circle at calc(var(--x) * 1px) calc(var(--y) * 1px), hsl(var(--hue-val, 240) calc(var(--hue-sat, 0) * 1%) calc(var(--hue-lum, 100) * 1%) / var(--alpha)), transparent calc(var(--spotlight-size) * 1px));
    aspect-ratio: 4 / 5;
    background: fixed var(--radial-bg), var(--card-bg);
    position: relative;
    flex-direction: column;
    justify-content: space-evenly;
    border-radius: var(--border-radius);
    overflow: hidden;
  }

  .magical-borders::before {
    content: "";
    inset: var(--border-size);
    position: absolute;
    z-index: -1;
    border-radius: var(--outer-border-radius);
    background: fixed radial-gradient(circle at calc(var(--x) * 1px) calc(var(--y) * 1px), hsl(var(--hue-val, 240) calc(var(--hue-sat, 0) * 1.5%) calc(var(--hue-lum, 100) * 1.5%) / 0.5), transparent calc(var(--spotlight-size) * 1px));
  }

  .magical-borders::after {
    display: none;
    --alpha: 0.5;
    content: "";
    inset: 0;
    position: absolute;
    z-index: -1;
    border-radius: var(--outer-border-radius);
    background: fixed radial-gradient(circle at calc(var(--x) * 1px) calc(var(--y) * 1px), hsl(var(--hue-val, 240) calc(var(--hue-sat, 0) * 1.5%) calc(var(--hue-lum, 100) * 1%) / 0.5), transparent calc(var(--spotlight-size) * 1px));
    filter: blur(1.5rem);
  }
}